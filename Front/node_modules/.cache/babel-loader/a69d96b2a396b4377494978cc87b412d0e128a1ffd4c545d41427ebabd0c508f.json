{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yosel\\\\Desktop\\\\rick_morty\\\\Front\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Cards from './components/Cards/Cards.jsx';\nimport NavBar from './components/Nav/NavBar';\nimport axios from 'axios';\nimport { Routes, Route, useLocation, useNavigate } from 'react-router-dom';\nimport About from \"./components/About/About\";\nimport Detail from \"./components/Detail/Detail\";\nimport Error from './components/Error/Error';\nimport Form from './components/Form/Form';\nimport Fav from './components/Fav/Fav';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [characters, setCharacters] = useState([]);\n  const [access, setAccess] = useState(false);\n  const nav = useNavigate();\n  const login = async userData => {\n    const URL = 'http://localhost:3001/rickandmorty/logInasdasd';\n    axios.get(`${URL}?email=${userData.email}&password=${userData.password}`).then(_ref => {\n      let {\n        data\n      } = _ref;\n      console.log(\"=======>\", data.access);\n      if (data.access) {\n        setAccess(data.access);\n        nav(\"/home\");\n        return alert(\"ok\");\n      }\n    });\n    // try {\n    //    const {mail, pass}=userData\n    //    const URL = 'http://localhost:3001/rickandmorty/login/';\n    //    if(mail===email && password===pass){\n    //    const response= await axios.get(`${URL}?email=${email}&password=${password}`)\n    //    const {access}=response.data\n    //    setAccess(response.data)\n    //    access && nav ('/home')}\n    // } catch (error) {\n    //    console.log(error.message)\n    // }\n  };\n\n  useEffect(() => {\n    !access && nav('/');\n  }, [access, nav]);\n  const onSearch = async id => {\n    // axios(`http://localhost:3001/rickandmorty/character/${id}`).then(({ data }) => {\n    //    if (data.name) {\n    //       let exist = characters.find((ch) => ch.id === data.id)\n    //       if(exist){\n    //          alert(\"ya existe\")\n    //       }\n    //       else{\n    //          setCharacters((oldChars) => [...oldChars, data])};\n    //    } else {\n    //       window.alert('¡No hay personajes con este ID!');\n    //    }\n    // });\n    try {\n      const data = await axios(`http://localhost:3001/rickandmorty/character/${id}`);\n      if (data.name) {\n        let exist = characters.find(ch => ch.id === data.id);\n        if (exist) {\n          alert(\"ya existe\");\n        } else {\n          setCharacters(oldChars => [...oldChars, data]);\n        }\n      } else {\n        window.alert('¡No hay personajes con este ID!');\n      }\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  function onClose(id) {\n    setCharacters(oldChars => {\n      return oldChars.filter(ch => ch.id !== id);\n    });\n  }\n  const location = useLocation();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [location.pathname !== \"/\" && /*#__PURE__*/_jsxDEV(NavBar, {\n      onSearch: onSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 40\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Form, {\n          login: login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/home\",\n        element: /*#__PURE__*/_jsxDEV(Cards, {\n          onClose: onClose,\n          characters: characters\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/detail/:id\",\n        element: /*#__PURE__*/_jsxDEV(Detail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/favorites\",\n        element: /*#__PURE__*/_jsxDEV(Fav, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"kvhn5XrdSaHLdq3FGNa8bVKpW78=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Cards","NavBar","axios","Routes","Route","useLocation","useNavigate","About","Detail","Error","Form","Fav","jsxDEV","_jsxDEV","App","_s","characters","setCharacters","access","setAccess","nav","login","userData","URL","get","email","password","then","_ref","data","console","log","alert","onSearch","id","name","exist","find","ch","oldChars","window","error","message","onClose","filter","location","className","children","pathname","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["C:/Users/yosel/Desktop/rick_morty/Front/src/App.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Cards from './components/Cards/Cards.jsx';\nimport NavBar from './components/Nav/NavBar';\nimport axios from 'axios';\nimport { Routes, Route, useLocation, useNavigate } from 'react-router-dom';\nimport About from \"./components/About/About\"\nimport Detail from \"./components/Detail/Detail\"\nimport Error from './components/Error/Error';\nimport Form from './components/Form/Form';\nimport Fav from './components/Fav/Fav'\n\n\n\nfunction App() {\n   const[characters, setCharacters] = useState([])\n\n   const [access, setAccess]= useState(false)\n   const nav=useNavigate()\n\n   const login= async (userData)=>{\n      \n      const URL = 'http://localhost:3001/rickandmorty/logInasdasd';\n      axios.get(`${URL}?email=${userData.email}&password=${userData.password}`).then(({ data }) => {\n         console.log(\"=======>\",data.access)\n         if(data.access){\n            setAccess(data.access)\n            nav(\"/home\")\n            return alert(\"ok\")\n         }\n      });\n      // try {\n      //    const {mail, pass}=userData\n      //    const URL = 'http://localhost:3001/rickandmorty/login/';\n      //    if(mail===email && password===pass){\n      //    const response= await axios.get(`${URL}?email=${email}&password=${password}`)\n      //    const {access}=response.data\n      //    setAccess(response.data)\n      //    access && nav ('/home')}\n      // } catch (error) {\n      //    console.log(error.message)\n      // }\n   }\n\n   useEffect(() => {\n      !access && nav('/');\n    }, [access, nav]);\n\n\n   const onSearch = async (id)=> {\n      // axios(`http://localhost:3001/rickandmorty/character/${id}`).then(({ data }) => {\n      //    if (data.name) {\n      //       let exist = characters.find((ch) => ch.id === data.id)\n      //       if(exist){\n      //          alert(\"ya existe\")\n      //       }\n      //       else{\n      //          setCharacters((oldChars) => [...oldChars, data])};\n      //    } else {\n      //       window.alert('¡No hay personajes con este ID!');\n      //    }\n      // });\n      try {\n         const data= await axios(`http://localhost:3001/rickandmorty/character/${id}`)\n         if(data.name){\n            let exist = characters.find((ch) => ch.id === data.id)\n            if(exist){\n               alert(\"ya existe\")\n            }\n            else{\n               setCharacters((oldChars) => [...oldChars, data])\n            }\n         }\n         else{\n            window.alert('¡No hay personajes con este ID!');\n         }\n      } catch (error) {\n         console.log(error.message)\n      }\n   }\n\n\n   \n   function onClose(id) {\n      setCharacters((oldChars) => {\n        return oldChars.filter((ch) => ch.id !== id);\n      });\n   }\n\n   const location=useLocation()\n   return (\n      <div className='App'>\n         {location.pathname !== \"/\" && <NavBar onSearch={onSearch}/>}\n         <Routes>\n            <Route path='/' element={<Form login={login}/>}/>\n            <Route path=\"/home\" element={<Cards onClose={onClose} characters={characters} />}/>\n            <Route path=\"/about\" element={<About/>}/>\n            <Route path=\"/detail/:id\" element={<Detail/>}/>\n            <Route path='*' element={<Error/>}/> \n            <Route path=\"/favorites\" element={<Fav/>}/>\n         </Routes>\n         \n      </div>\n   );\n\n   \n   \n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}